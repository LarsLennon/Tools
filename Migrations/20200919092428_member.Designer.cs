// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToolSmukfest.Data;

namespace ToolSmukfest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200919092428_member")]
    partial class member
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToolSmukfest.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByMemberMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MembaOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("MembaOrderLineId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickedUp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Returned")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId");

                    b.HasIndex("CreatedByMemberId");

                    b.HasIndex("CreatedByMemberMemberId");

                    b.HasIndex("ItemId");

                    b.HasIndex("MembaOrderId");

                    b.HasIndex("MembaOrderLineId");

                    b.HasIndex("TeamId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Festival", b =>
                {
                    b.Property<int>("FestivalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FestivalId");

                    b.ToTable("Festival");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemSupplierId")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Nr")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Received")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiverMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Registration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Returned")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReturnerMemberId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemSupplierId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("ReceiverMemberId");

                    b.HasIndex("ReturnerMemberId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemSupplier", b =>
                {
                    b.Property<int>("ItemSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("ItemSupplierId");

                    b.HasIndex("SectionId");

                    b.ToTable("ItemSupplier");
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemType", b =>
                {
                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ExternalSupplier")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PricePeriodUnit")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("ShortTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeId");

                    b.HasIndex("ItemSupplierId");

                    b.HasIndex("ItemTypeCategoryId");

                    b.HasIndex("SectionId");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemTypeCategory", b =>
                {
                    b.Property<int>("ItemTypeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeCategoryId");

                    b.HasIndex("SectionId");

                    b.ToTable("ItemTypeCategory");
                });

            modelBuilder.Entity("ToolSmukfest.Models.MembaOrder", b =>
                {
                    b.Property<int>("MembaOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("MembaOrderId");

                    b.HasIndex("CreatedByMemberId");

                    b.HasIndex("MemberId");

                    b.HasIndex("SectionId");

                    b.HasIndex("TeamId");

                    b.ToTable("MembaOrders");
                });

            modelBuilder.Entity("ToolSmukfest.Models.MembaOrderLine", b =>
                {
                    b.Property<int>("MembaOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MembaOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("MembaOrderLineId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("MembaOrderId");

                    b.ToTable("MembaOrderLines");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentSectionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAlternate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSynchronization")
                        .HasColumnType("datetime2");

                    b.Property<string>("MembaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VirtualMember")
                        .HasColumnType("bit");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("iscomplete")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FestivalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("FestivalId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSynchronization")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("ParentId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Booking", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("CreatedByMemberId");

                    b.HasOne("ToolSmukfest.Models.Member", "CreatedByMember")
                        .WithMany()
                        .HasForeignKey("CreatedByMemberMemberId");

                    b.HasOne("ToolSmukfest.Models.Item", "Item")
                        .WithMany("Bookings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolSmukfest.Models.MembaOrder", "MembaOrder")
                        .WithMany()
                        .HasForeignKey("MembaOrderId");

                    b.HasOne("ToolSmukfest.Models.MembaOrderLine", "MembaOrderLine")
                        .WithMany("Bookings")
                        .HasForeignKey("MembaOrderLineId");

                    b.HasOne("ToolSmukfest.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Event", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToolSmukfest.Models.Item", b =>
                {
                    b.HasOne("ToolSmukfest.Models.ItemSupplier", "ItemSupplier")
                        .WithMany()
                        .HasForeignKey("ItemSupplierId");

                    b.HasOne("ToolSmukfest.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolSmukfest.Models.Member", "ReceiverMember")
                        .WithMany("ItemsReceived")
                        .HasForeignKey("ReceiverMemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ToolSmukfest.Models.Member", "ReturnerMember")
                        .WithMany("ItemsReturned")
                        .HasForeignKey("ReturnerMemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemSupplier", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Section", null)
                        .WithMany("ItemSuppliers")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemType", b =>
                {
                    b.HasOne("ToolSmukfest.Models.ItemSupplier", "ItemSupplier")
                        .WithMany()
                        .HasForeignKey("ItemSupplierId");

                    b.HasOne("ToolSmukfest.Models.ItemTypeCategory", "ItemTypeCategory")
                        .WithMany("ItemTypes")
                        .HasForeignKey("ItemTypeCategoryId");

                    b.HasOne("ToolSmukfest.Models.Section", "Section")
                        .WithMany("ItemTypes")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToolSmukfest.Models.ItemTypeCategory", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Section", "Section")
                        .WithMany("ItemTypeCategories")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToolSmukfest.Models.MembaOrder", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Member", "CreatedByMember")
                        .WithMany("MembaOrdersCreated")
                        .HasForeignKey("CreatedByMemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ToolSmukfest.Models.Member", "Member")
                        .WithMany("MembaOrders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ToolSmukfest.Models.Section", "Section")
                        .WithMany("MembaOrders")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolSmukfest.Models.Team", "Team")
                        .WithMany("MembaOrders")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("ToolSmukfest.Models.MembaOrderLine", b =>
                {
                    b.HasOne("ToolSmukfest.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolSmukfest.Models.MembaOrder", null)
                        .WithMany("Lines")
                        .HasForeignKey("MembaOrderId");
                });

            modelBuilder.Entity("ToolSmukfest.Models.Section", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Festival", "Festival")
                        .WithMany("Sections")
                        .HasForeignKey("FestivalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToolSmukfest.Models.Team", b =>
                {
                    b.HasOne("ToolSmukfest.Models.Team", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
